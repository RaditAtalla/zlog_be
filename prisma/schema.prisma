// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Jabatan {
  PM
  SEM
  POP
  LOGISTIK
  PENBAR
  SOM
  GSP
  SP
  ARK
  QCO
  HSEO
  SAK
  SE
}

model User {
  id          Int         @id @default(autoincrement())
  nama        String
  nomorHp     String      @unique
  email       String      @unique
  password    String
  jabatan     Jabatan
  picProject  PicProject?
  sppCreated  DataSpp[]   @relation("createdByUser")
  sppAcc1     DataSpp[]   @relation("acc1ByUser")
  sppAcc2     DataSpp[]   @relation("acc2ByUser")
  sppAccFinal DataSpp[]   @relation("accFinalByUser")
}

model Project {
  id         Int          @id @default(autoincrement())
  kode       Int
  nama       String
  lokasi     String
  picProject PicProject[]
  dataSpp    DataSpp[]
}

model PicProject {
  id        Int     @id @default(autoincrement())
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  userId    Int     @unique
  user      User    @relation(fields: [userId], references: [id])
}

model DetailSpp {
  id          Int     @id @default(autoincrement())
  material    String
  spesifikasi String
  volume      String
  satuan      String
  lokasi      String
  dataSppId   Int
  dataSpp     DataSpp @relation(fields: [dataSppId], references: [id])
}

model DataSpp {
  id               Int         @id @default(autoincrement())
  projectId        Int
  project          Project     @relation(fields: [projectId], references: [id])
  kode             String      @unique
  createdAt        DateTime    @default(now())
  createdByUserId  Int
  createdByUser    User        @relation("createdByUser", fields: [createdByUserId], references: [id])
  acc1At           DateTime?
  acc1ByUserId     Int?
  acc1ByUser       User?       @relation("acc1ByUser", fields: [acc1ByUserId], references: [id])
  acc2At           DateTime?
  acc2ByUserId     Int?
  acc2ByUser       User?       @relation("acc2ByUser", fields: [acc2ByUserId], references: [id])
  accFinalAt       DateTime?
  accFinalByUserId Int?
  accFinalByUser   User?       @relation("accFinalByUser", fields: [accFinalByUserId], references: [id])
  detailSpp        DetailSpp[]
}
