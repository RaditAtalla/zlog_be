// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Jabatan {
  PM
  SEM
  POP
  LOGISTIK
  PENBAR
  SOM
  GSP
  SP
  ARK
  QCO
  HSEO
  SAK
  SE
}

enum SppStatus {
  APPROVED
  NOT_APPROVED
  WAITING
}

model User {
  id          Int         @id @default(autoincrement())
  nama        String
  nomorHp     String      @unique
  email       String      @unique
  password    String
  jabatan     Jabatan
  picProject  PicProject?
  sppCreated  DataSpp[]   @relation("createdByUser")
  sppAcc1     Project[]   @relation("sppAcc1")
  sppAcc2     Project[]   @relation("sppAcc2")
  sppAccFinal Project[]   @relation("sppAccFinal")
}

model Project {
  id            Int          @id @default(autoincrement())
  kode          Int
  nama          String
  lokasi        String
  picProject    PicProject[]
  dataSpp       DataSpp[]
  sppAcc1Id     Int
  sppAcc1       User         @relation("sppAcc1", fields: [sppAcc1Id], references: [id])
  sppAcc2Id     Int
  sppAcc2       User         @relation("sppAcc2", fields: [sppAcc2Id], references: [id])
  sppAccFinalId Int
  sppAccFinal   User         @relation("sppAccFinal", fields: [sppAccFinalId], references: [id])
}

model PicProject {
  id        Int     @id @default(autoincrement())
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  userId    Int     @unique
  user      User    @relation(fields: [userId], references: [id])
}

model DetailSpp {
  id          Int     @id @default(autoincrement())
  material    String
  spesifikasi String
  volume      String
  satuan      String
  lokasi      String
  dataSppId   Int
  dataSpp     DataSpp @relation(fields: [dataSppId], references: [id])
}

model DataSpp {
  id              Int         @id @default(autoincrement())
  projectId       Int
  project         Project     @relation(fields: [projectId], references: [id])
  kode            String      @unique
  createdAt       DateTime    @default(now())
  createdByUserId Int
  createdByUser   User        @relation("createdByUser", fields: [createdByUserId], references: [id])
  acc2Status      SppStatus   @default(WAITING)
  acc1Status      SppStatus   @default(WAITING)
  accFinalStatus  SppStatus   @default(WAITING)
  sppStatus       SppStatus   @default(WAITING)
  detailSpp       DetailSpp[]
}
